snippet xq
# noted by XUANQI
endsnippet

snippet exitxq
exit # noted by XUANQI
endsnippet

snippet initpy
FILE=XXX.py

ts := $(shell /bin/date "+%Y-%m-%d---%H-%M-%S")

all:
	python3.5 $(FILE)

edit:
	vim $(FILE)

backup:
	@echo $(ts)
	cp $(FILE) version/$(FILE)-$(ts)

timestamp:
	@echo Timestamp is $(ts)
	@sleep 10
	@echo Timestamp is $(ts)
endsnippet

snippet initmd
mdname=XXX.md
htmlname=$(mdname:.md=.html)
all:
	@echo "Generate" $(htmlname) "......"
	pandoc md/${mdname} --columns=1000 -t html -s -o ${htmlname} --mathjax=https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML --css pandoc.css
	firefox ${htmlname}
edit:
	vim md/${mdname}
open:
	firefox ${htmlname}

clean:
	rm ${htmlname}

distclean:
	rm *.html
mdfiles=$(wildcard md/*.md)
htmlfiles=$(patsubst md/%.md, %.html, $(mdfiles))

%.html:md/%.md
	@echo $<
	@pandoc $< -t html -s -o $@ --mathjax=https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML --css pandoc.css

rebuild:$(htmlfiles)
	echo "compile all"
endsnippet

snippet inittex
FILE=XXX.tex
pdfname=$(FILE:.tex=.pdf)
all:
	pdflatex $(FILE)
edit:
	vim ${FILE}
open:
	zathura ${pdfname} &

clean:
	rm ${pdfname} *.aux *.out *.log
endsnippet

snippet initc
CXX=g++
CXXFLAG= -std=c++11 # -fopenmp # C compiler flags
CXXPP= #-DPRED -DDEBUG		#-DPRED # CXX Preprocessor
INCLUDE_DIRS=-I "/usr/include/hdf5/serial/"
LDFLAGS= 					# Linker flags, e.g. -L<lib dir> if you have libraries in a nonstandard directory <lib dir>
LIBS= -lhdf5	 			# Libraries to pass to the linker, e.g. -l<library>

A_TARGET=XXX
# $^: source file; $@: object file
A_FILES := $(wildcard *.cpp) $(wildcard *.c)
A_OBJS := $(sort $(patsubst %.c, %.o, $(patsubst %.cpp, %.o, $(A_FILES))))

all: $(A_TARGET)

# $(A_TARGET): %.o
$(A_TARGET): $(A_OBJS)
	$(CXX) $(CXXFLAG) $^ -o $@ $(LDFLAGS) $(LIBS)

%.o: %.cpp
	$(CXX) $(CXXFLAG) $(CXXPP) -c $< -o $@ $(INCLUDE_DIRS)

# $<: source file; $@: object file
%: %.cpp
	$(CXX) $(CXXFLAG) $(CXXPP) -o $@ $<

# run:

clean:
	rm $(A_TARGET) *.o

edit:
	vim $(A_TARGET).cpp

endsnippet
